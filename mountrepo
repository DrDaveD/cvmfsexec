#!/bin/bash
#
# Mount a cvmfs repository as an unprivileged user.
# Works with fusermount or with a kernel (>= 4.18) that supports mounting
#   fuse repositories in unprivileged "fakeroot" namespaces.
# Mounts in cvmfs subdirectory of the directory where the command is found.
# Written by Dave Dykstra 17 April 2019
#


usage()
{
    echo "Usage: mountrepo repo.name" >&2
    exit 1
}

if [ $# != 1 ]; then
    usage
fi

REPO="$1"

if [ -n "$CVMFSEXEC_CMDFD" ] && [ -n "$CVMFSEXEC_WAITFIFO" ]; then
    # this is within cvmfsexec, requesting to mount another repo
    if [ -z "$CVMFSMOUNT" ]; then
        echo "$0: mount within cvmfsexec only works through \$CVMFSMOUNT interface" >&2
        exit 1
    fi

    # Send command to the "parent" process still outside the namespace.
    # "Parent" is in quotes because the linux process tree gets reversed and
    #   it is actually a linux child.  It is a parent environment-wise though.
    echo MOUNTREPO $REPO >&$CVMFSEXEC_CMDFD
    exec {CVMFSEXEC_CMDFD}>&- # close it, no longer needed
    # wait until that process is finished mounting
    read RET <$CVMFSEXEC_WAITFIFO
    exit $RET
fi

HERE="$(cd `dirname $0` && pwd)"
DIST="$HERE/dist"

if [ ! -f $DIST/usr/bin/cvmfs2 ] || \
      [ -z "`find $DIST/etc/cvmfs/default.d -name "*.conf" 2>/dev/null`" ]; then
    echo "$DIST should be rpm2cpio of cvmfs + config rpm" >&2
    exit 1
fi

CONFFILE="`mktemp`"
trap "rm -f $CONFFILE" 0

# Relocate the given files, and substitute a ". ../" with a full path
#  to the parent directory of the first file.  The latter is a hack for
#  the EGI configuration repo which uses that idiom, reading a file 
#  (common.conf) that itself does not need relocation; it is not in any
#  way a general purpose processor of the bash "source" feature.

relocate()
{
sed -e "s,^\([^/]*\)/cvmfs,\1$DIST/cvmfs," \
    -e "s,^\([^/]*\)/etc,\1$DIST/etc," \
    -e "s,^\([^/]*\)/var,\1$DIST/var," \
    -e "s,^\. \.\./,. ${1%/*/*}/," $* 2>/dev/null
}

DOMAIN="`echo "$REPO"|cut -d. -f2-`"
(
relocate $DIST/etc/cvmfs/default.conf
relocate $DIST/etc/cvmfs/default.d/*.conf
CONFIG_REPO="`sed -n 's/^CVMFS_CONFIG_REPOSITORY=//p' $DIST/etc/cvmfs/default.d/*.conf`"
if [ "$REPO" != "$CONFIG_REPO" ]; then
    relocate $DIST/cvmfs/$CONFIG_REPO/etc/cvmfs/default.conf
fi

DEFLOCAL=$DIST/etc/cvmfs/default.local
relocate $DEFLOCAL
# set some defaults if they weren't already in the dist's default.local
if ! grep -q "^CVMFS_HTTP_PROXY=" $DEFLOCAL 2>/dev/null; then
    echo 'CVMFS_HTTP_PROXY="auto;DIRECT"'
    echo 'CVMFS_PAC_URLS="http://cernvm-wpad.fnal.gov/wpad.dat;http://cernvm-wpad.cern.ch/wpad.dat"'
fi
if ! grep -q "^CVMFS_NFILES=" $DEFLOCAL 2>/dev/null; then
    echo "CVMFS_NFILES=`ulimit -Hn`"
fi
if ! grep -q "^CVMFS_USYSLOG=" $DEFLOCAL 2>/dev/null; then
    mkdir -p $HERE/log
    echo "CVMFS_USYSLOG=$HERE/log/$REPO.log"
fi

if [ "$REPO" != "$CONFIG_REPO" ]; then
    relocate $DIST/cvmfs/$CONFIG_REPO/etc/cvmfs/domain.d/$DOMAIN.conf
fi
relocate $DIST/etc/cvmfs/domain.d/$DOMAIN.conf
relocate $DIST/etc/cvmfs/domain.d/$DOMAIN.local
if [ "$REPO" != "$CONFIG_REPO" ]; then
    # OASIS_CERTIFICATES is one special variable we do not want relocated
    relocate $DIST/cvmfs/$CONFIG_REPO/etc/cvmfs/config.d/$REPO.conf | \
        sed 's,^OASIS_CERTIFICATES=$CVMFS_MOUNT_DIR,OASIS_CERTIFICATES=/cvmfs,'
fi
relocate $DIST/etc/cvmfs/config.d/$REPO.conf
relocate $DIST/etc/cvmfs/config.d/$REPO.local

) > $CONFFILE

OPTS=""
if grep -q ^CVMFS_DEBUGLOG=. $CONFFILE; then
    OPTS="$OPTS,debug"
fi

mkdir -p $DIST/var/run/cvmfs
mkdir -p $DIST/cvmfs/$REPO
if [ -f $DIST/usr/lib/libcvmfs_fuse.so ]; then
    LPATH=$DIST/usr/lib
else
    LPATH=$DIST/usr/lib64
fi
LD_LIBRARY_PATH=$LPATH CVMFS_LIBRARY_PATH=$LPATH $DIST/usr/bin/cvmfs2 -o config=$CONFFILE$OPTS $REPO $DIST/cvmfs/$REPO
